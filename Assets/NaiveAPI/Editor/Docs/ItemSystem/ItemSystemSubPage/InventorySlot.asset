%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: a48b1c19eb373eb44a4af20652592e29, type: 3}
  m_Name: InventorySlot
  m_EditorClassIdentifier: 
  Name: 
  DocType: 1
  MenuIcon: {fileID: 2800000, guid: a701817c8dd65c54c819e08fac8e2daf, type: 3}
  SubPages: []
  Components:
  - ComponentType: 3
    Text:
    - Description
    Picture: {fileID: 0}
  - ComponentType: 0
    Text:
    - Data class for Inventory as a slot
    Picture: {fileID: 0}
  - ComponentType: 6
    Text:
    - 
    Picture: {fileID: 0}
  - ComponentType: 3
    Text:
    - Properties
    Picture: {fileID: 0}
  - ComponentType: 5
    Text:
    - Type%column%Name%column%Get%column%Set%column%Usage
    - "ItemStack%column%ItemStack%column%   \u25A0%column%   \u25A0%column%item &
      count info"
    - "SOItemBase%column%Item%column%   \u25A0%column%   \u25A0%column%get/set for
      ItemStack.Item"
    - "int%column%Count%column%   \u25A0%column%   \u25A0%column%get/set for ItemStack.Count"
    - "bool%column%IsFull%column%   \u25A0%column%%column%count == Item.StackLimit"
    - "bool%column%IsEmpty%column%   \u25A0%column%%column%count <= 0"
    Picture: {fileID: 0}
  - ComponentType: 6
    Text:
    - 
    Picture: {fileID: 0}
  - ComponentType: 3
    Text:
    - Operator
    Picture: {fileID: 0}
  - ComponentType: 5
    Text:
    - to Type%column%info
    - ItemStack%column%it's ItemStack
    - int%column%it's ItemStack.Count
    - bool%column%it's ItemStack.IsEmpty
    - string%column%it's ItemStack.ToString()
    Picture: {fileID: 0}
  - ComponentType: 6
    Text:
    - 
    Picture: {fileID: 0}
  - ComponentType: 3
    Text:
    - Methods
    Picture: {fileID: 0}
  - ComponentType: 2
    Text:
    - void
    - Clear
    - 'clear it''s ItemStack

'
    Picture: {fileID: 0}
  - ComponentType: 2
    Text:
    - int
    - SetItem
    - 'SOItemBase

      item'
    - 'int

      count'
    - "set it's ItemStack, but if input count is more than stackLimit,\nIt return
      the overflow number\nex:\tlimit = 3, input = 5 -> return 2\n"
    Picture: {fileID: 0}
  - ComponentType: 2
    Text:
    - int
    - PutItem
    - 'int

      count'
    - 'add count to the ItemStack

      It return the overflow number

'
    Picture: {fileID: 0}
  - ComponentType: 2
    Text:
    - int
    - TakeItem
    - 'int

      count'
    - "tack count from the ItemStack, but if not enough\nIt return the missing count
      number\nex:\tItemStack.Count = 3, input = 5 -> return 2"
    Picture: {fileID: 0}
